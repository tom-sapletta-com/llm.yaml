#!/usr/bin/env python3
"""generate_plan.py

Reads the prompt generated by ``run_analysis.py`` (``prompt_for_chatai.txt``)
and would normally invoke the LLM tool ``chatai`` to obtain a plan for the
next iteration. For the purpose of this repository we provide a stub that
simply echoes the prompt and writes a placeholder plan to
``plan.yaml``.
"""

from pathlib import Path
import subprocess
import sys

PROMPT_FILE = Path(__file__).resolve().parents[1] / "prompt_for_chatai.txt"
PLAN_FILE = Path(__file__).resolve().parents[1] / "plan.yaml"

def main():
    if not PROMPT_FILE.exists():
        print(f"Prompt file {PROMPT_FILE} not found. Run run_analysis.py first.", file=sys.stderr)
        sys.exit(1)
    prompt = PROMPT_FILE.read_text(encoding="utf-8")
    # Stub: just write the prompt back as a comment in plan.yaml
    plan_content = "# Generated plan (stub)\n" + "# -------------------\n" + "# The following is the prompt that would be sent to chatai:\n" + "#\n" + "# " + prompt.replace("\n", "\n# ")
    PLAN_FILE.write_text(plan_content, encoding="utf-8")
    print(f"Stub plan written to {PLAN_FILE}")
    # If chatai were available you could uncomment the following lines:
    # try:
    #     result = subprocess.run(["chatai", "run", "--prompt-file", str(PROMPT_FILE)], capture_output=True, text=True, check=True)
    #     PLAN_FILE.write_text(result.stdout, encoding="utf-8")
    #     print(f"Plan generated and saved to {PLAN_FILE}")
    # except FileNotFoundError:
    #     print("chatai executable not found â€“ using stub output.")

if __name__ == "__main__":
    main()
